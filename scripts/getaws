#!/bin/bash


REQUEST_COMMAND="noglob aws emr create-cluster --name AvitoBig  --release-label emr-4.0.0  --applications  Name=Spark --bootstrap-action Path=s3://support.elasticmapreduce/bootstrap-actions/ami/3.3.1/ridetherocket-workaround.bash --instance-type r3.xlarge --instance-count 13 --service-role EMR_DefaultRole --ec2-attributes KeyName=panerapig,InstanceProfile=EMR_EC2_DefaultRole,SubnetId=subnet-04299373"


MASTER=""
STATE=""

CLUSTERID=$(aws emr list-clusters --active | grep "\"Id\"" | awk -F "\"" '{ print $4 }')
if [[ -z $CLUSTERID ]]; then 
    echo "No active cluster"
    exit
fi

echo "ClusterID: $CLUSTERID"

MASTER=$(aws emr describe-cluster --cluster-id $CLUSTERID 2>/dev/null | grep "MasterPu" | awk -F "\"" '{ print $4 }')

STATE=$(aws emr describe-cluster --cluster-id $CLUSTERID 2>/dev/null | grep "State\":" | head -n 1 | awk -F "\"" ' { print $4 }')
COUNTER=20
while [[ -z $MASTER ]] && [[ $COUNTER -gt 1 ]]; do
    let COUNTER=COUNTER-1 
    sleep 15
    MASTER=$(aws emr describe-cluster --cluster-id $CLUSTERID 2>/dev/null | grep "MasterPu" | awk -F "\"" '{ print $4 }')
done
if [[ $COUNTER -lt 2 ]]; then
    echo "No Master Public DNS name yet"
    exit
fi


echo $MASTER > master

echo '<!DOCTYPE html>' > awsloc.html
echo '<html><frameset rows="1%,99%">' >> awsloc.html
echo "<frame src=\"http://$MASTER/ganglia\">" >> awsloc.html
echo "<frame src=\"http://$MASTER:8088\">" >> awsloc.html
echo '</frameset></html>' >> awsloc.html

#echo "<html><a href=\"http://$MASTER/ganglia\">Ganglia</a> <br> <a href=\"http://$MASTER:9026\">Yarn</a>" > awsloc.html
echo -e "Master:\t$MASTER"


STATE=$(aws emr describe-cluster --cluster-id $CLUSTERID 2>/dev/null | grep "State\":" | head -n 1 | awk -F "\"" ' { print $4 }')
echo "$STATE"

COUNTER=40
while [[ "$STATE" != "WAITING" ]] && [[ $COUNTER -gt 1 ]]; do
    let COUNTER=COUNTER-1 
    sleep 15
    STATE=$(aws emr describe-cluster --cluster-id $CLUSTERID 2>/dev/null | grep "State\":" | head -n 1 | awk -F "\"" ' { print $4 }')
done
if [[ $COUNTER -lt 2 ]]; then
    echo "State is not yet RUNNING"
    exit
fi
echo -e "Status:\t$STATE"

echo ""

TYPE=$(aws emr describe-cluster --cluster-id $CLUSTERID | grep "InstanceType" | head -n 1 | awk -F "\"" '{ print $4 }')
NUM=$(aws emr describe-cluster --cluster-id $CLUSTERID | grep CORE -B 11 | grep "RequestedInstanceCount" | head -n 1 | awk -F " " '{ print  $2 }' | awk -F "," '{print $1}')

echo "ssh $MASTER"
scp ../events/liberty/target/scala-2.10/LibertyProject-assembly-1.0.jar $MASTER:/home/hadoop/.
##scp ../conf/$TYPE/$NUM/spark-defaults.conf $MASTER:/home/hadoop/spark/conf/.
scp ../conf/$TYPE/$NUM/spark-defaults.conf $MASTER:/home/hadoop/.

ssh  -ND 8157 $MASTER
