package com.sparkydots.kaggle

import com.sparkydots.util.geo.{Earth, Point}
import com.sparkydots.kaggle.taxi.Extract
import com.sparkydots.util.geo.Earth._

object Runner extends App {

  val e = Earth(Point(41.14, -8.62))
  println(haversineDistance(Point(41, -9), Point(41, -8)))
  println(e.toPolar(Point(1, 0)))
  println(e.toPolar(Point(-1, 0)))
  println(e.toPolar(Point(0, 1)))
  println(e.toPolar(Point(1, 1)))
  println(e.toPolar(Point(-1, 1)))
  println(e.toPolar(Point(-1, -1)))


  e.cleanTaxiPath( Extract._parsePoints("[[1,2], [3,4.0] , [5.33,  3.14 ], [1,-1]  ]", false))._1.foreach(println)



  val path = "[[-8.620074,41.146857],[-8.620029,41.146875],[-8.619993,41.146875],[-8.619831,41.146263],[-8.619669,41.146146],[-8.619084,41.146164],[-8.617878,41.146371],[-8.617806,41.146947],[-8.617851,41.14701],[-8.617887,41.147181],[-8.61813,41.148306],[-8.619273,41.148639],[-8.620155,41.14773],[-8.621334,41.147505],[-8.623269,41.147955],[-8.625393,41.148801],[-8.625879,41.150628],[-8.626113,41.152284],[-8.627157,41.152455],[-8.629605,41.152581],[-8.631981,41.152707],[-8.633304,41.151546],[-8.636229,41.151087],[-8.639649,41.151321],[-8.641575,41.151501],[-8.643438,41.152428],[-8.645031,41.154588],[-8.646534,41.157576],[-8.648784,41.160393],[-8.648829,41.163147],[-8.646453,41.164848],[-8.643231,41.166198],[-8.640891,41.167485],[-8.642043,41.16726],[-8.643816,41.168646],[-8.646525,41.170779],[-8.64972,41.173434],[-8.653113,41.176125],[-8.656596,41.178906],[-8.659674,41.181462],[-8.663022,41.18418],[-8.666532,41.187051],[-8.67042,41.188986],[-8.675127,41.189607],[-8.67924,41.191803],[-8.682318,41.194827],[-8.685162,41.197653],[-8.688312,41.200668],[-8.690229,41.20407],[-8.690346,41.207832],[-8.690373,41.211738],[-8.690427,41.215527],[-8.691057,41.219109],[-8.692497,41.222619],[-8.69445,41.225976],[-8.69517,41.229567],[-8.695386,41.232618],[-8.695782,41.2362],[-8.695251,41.239782],[-8.694216,41.243544],[-8.695044,41.247522],[-8.697609,41.251041],[-8.700372,41.254461],[-8.701569,41.257674],[-8.701461,41.261238],[-8.701524,41.265],[-8.701974,41.268429],[-8.701713,41.272398],[-8.700039,41.276223],[-8.698914,41.279751],[-8.699976,41.283558],[-8.702163,41.286735],[-8.70453,41.290101],[-8.706348,41.293683],[-8.70543,41.297364],[-8.702244,41.299992],[-8.698437,41.30262],[-8.696691,41.306175],[-8.698257,41.309676],[-8.700795,41.313069],[-8.70336,41.316597],[-8.705772,41.3199],[-8.707635,41.32341],[-8.708364,41.327091],[-8.709606,41.330655],[-8.711361,41.334102],[-8.712216,41.337441],[-8.712558,41.340897],[-8.712477,41.344263],[-8.711865,41.347629],[-8.712135,41.351103],[-8.712585,41.354595],[-8.714466,41.357898],[-8.717643,41.360571],[-8.720856,41.363244],[-8.723142,41.36652],[-8.724114,41.370228],[-8.725266,41.373639],[-8.726904,41.376762],[-8.728614,41.379651],[-8.731026,41.382171],[-8.734113,41.384511],[-8.737434,41.386995],[-8.740485,41.389668],[-8.743455,41.392692],[-8.7462,41.395518],[-8.748594,41.398326],[-8.75088,41.40117],[-8.754498,41.403888],[-8.759007,41.406894],[-8.760825,41.410962],[-8.758494,41.415057],[-8.755299,41.418999],[-8.751267,41.422581],[-8.747199,41.426064],[-8.744625,41.430411],[-8.742042,41.434803],[-8.739072,41.439114],[-8.736462,41.44392],[-8.733519,41.448195],[-8.731917,41.452659],[-8.733627,41.456916],[-8.736516,41.46111],[-8.738622,41.465655],[-8.738829,41.470209],[-8.739846,41.474115],[-8.741907,41.477769],[-8.620083,41.146092],[-8.618535,41.146236],[-8.743437,41.480919],[-8.744049,41.484258],[-8.743275,41.487417],[-8.740242,41.489658],[-8.737047,41.491773],[-8.735499,41.492808],[-8.732385,41.494914],[-8.727813,41.496381],[-8.722845,41.494743],[-8.718021,41.492736],[-8.712144,41.492376],[-8.706393,41.493897],[-8.700849,41.495166],[-8.694864,41.495346],[-8.688915,41.495526],[-8.682813,41.49702],[-8.677044,41.498982],[-8.670699,41.49981],[-8.664561,41.499441],[-8.659143,41.501358],[-8.653779,41.503446],[-8.647992,41.504103],[-8.641962,41.503725],[-8.63595,41.502654],[-8.62947,41.503356],[-8.62371,41.504652],[-8.619372,41.507478],[-8.615574,41.511015],[-8.612091,41.513544],[-8.609193,41.514489],[-8.610273,41.516325],[-8.612622,41.516028],[-8.614332,41.515542],[-8.613801,41.516757],[-8.609904,41.517162],[-8.606682,41.519421],[-8.603235,41.5215],[-8.598879,41.522688],[-8.594829,41.522931],[-8.592453,41.522679],[-8.590194,41.522634],[-8.587971,41.520852],[-8.587035,41.519142],[-8.585928,41.516973],[-8.58483,41.514867],[-8.583903,41.513184],[-8.583471,41.512329],[-8.583489,41.512347],[-8.583498,41.512347],[-8.583498,41.512356],[-8.583498,41.512356]]"
  val pts = Extract._parsePoints(path, false)
  println(s"orig points = ${pts.length}")
  val npts = e.cleanTaxiPath( pts )._1
  println(s"new points = ${npts.length}")

}

